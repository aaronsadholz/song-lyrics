#!/usr/bin/env python
"""
Fix artist name
"""
import argparse
import logging
import pandas as pd


def main():
    logger = logging.getLogger(__name__)
    logging.basicConfig(level=logging.INFO)

    # use docstring at the top as description for the script
    parser = argparse.ArgumentParser(description=__doc__)

    parser.add_argument('path_to_data', type=str,
                        help='Path to bag of words data')
    parser.add_argument('path_to_output', type=str,
                        help='Path to output file')

    args = parser.parse_args()
    path_to_data = args.path_to_data
    path_to_output = args.path_to_output

    logger.info('Loading data...')
    df = pd.read_feather(path_to_data)

    # fix artist_name - group by artist_id and replace with the most popular
    # name

    def fix_artist_name(df):
        most_common_name = df.artist_name.value_counts().index[0]
        return most_common_name

    fixed_name = df.groupby('artist_id').apply(fix_artist_name)
    fixed_name = pd.DataFrame(fixed_name).reset_index()
    fixed_name.columns = ['artist_id', 'artist_name']

    # fix artist_id, group by artist_name and replace with the first artist_id

    def fix_artist_id(df):
        return df.artist_id.iloc[0]

    fixed_id = fixed_name.groupby('artist_name').apply(fix_artist_id)
    fixed_id = pd.DataFrame(fixed_id).reset_index()
    fixed_id.columns = ['artist_name', 'artist_id_fixed']

    output = df.merge(fixed_id, how='left', on='artist_name')

    output.drop(columns='artist_id', inplace=True)
    output.rename(columns=dict(artist_id_fixed='artist_id'), inplace=True)


    output[output.artist_name=='Frank Sinatra'].artist_id.unique()

    # TODO: some artists lost their IDs - fix it
    output[['artist_name', 'artist_id']].drop_duplicates()


    logger.info('Saving file in {}'.format(path_to_output))
    output.to_feather(path_to_output)


if __name__ == "__main__":
    main()